version: '3.9'
services:
  db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - knight-42-network

  websocket:
    build:
      context: ./websocket
      dockerfile: Dockerfile
    container_name: websocket_server
    working_dir: /app
    volumes:
      - ./websocket:/app
      - /app/node_modules
    ports:
      - "8080:8080"
    command: ["node", "server.js"]
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "node server.js"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - knight-42-network

  db_backup:
    image: postgres:15-alpine
    container_name: postgres_backup
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_backup:/var/lib/postgresql/data
    depends_on:
      - db
    restart: always
    networks:
      - knight-42-network

volumes:
  db_data:
  db_backup:

networks:
  knight-42-network:
    external: true
