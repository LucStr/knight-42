import { IOCType } from "@prisma/client";

export enum AttributeTypes {
  md5 = "md5",
  sha1 = "sha1",
  sha256 = "sha256",
  filename = "filename",
  pdb = "pdb",
  filenamemd5 = "filename|md5",
  filenamesha1 = "filename|sha1",
  filenamesha256 = "filename|sha256",
  ipsrc = "ip-src",
  ipdst = "ip-dst",
  hostname = "hostname",
  domain = "domain",
  domainip = "domain|ip",
  email = "email",
  emailsrc = "email-src",
  eppn = "eppn",
  emaildst = "email-dst",
  emailsubject = "email-subject",
  emailattachment = "email-attachment",
  emailbody = "email-body",
  float = "float",
  gitcommitid = "git-commit-id",
  url = "url",
  httpmethod = "http-method",
  useragent = "user-agent",
  ja3fingerprintmd5 = "ja3-fingerprint-md5",
  jarmfingerprint = "jarm-fingerprint",
  faviconmmh3 = "favicon-mmh3",
  hasshmd5 = "hassh-md5",
  hasshservermd5 = "hasshserver-md5",
  regkey = "regkey",
  regkeyvalue = "regkey|value",
  as = "as",
  snort = "snort",
  bro = "bro",
  zeek = "zeek",
  communityid = "community-id",
  patterninfile = "pattern-in-file",
  patternintraffic = "pattern-in-traffic",
  patterninmemory = "pattern-in-memory",
  patternfilename = "pattern-filename",
  pgppublickey = "pgp-public-key",
  pgpprivatekey = "pgp-private-key",
  yara = "yara",
  stix2pattern = "stix2-pattern",
  sigma = "sigma",
  gene = "gene",
  kustoquery = "kusto-query",
  mimetype = "mime-type",
  identitycardnumber = "identity-card-number",
  cookie = "cookie",
  vulnerability = "vulnerability",
  cpe = "cpe",
  weakness = "weakness",
  attachment = "attachment",
  malwaresample = "malware-sample",
  link = "link",
  comment = "comment",
  text = "text",
  hex = "hex",
  other = "other",
  namedpipe = "named pipe",
  mutex = "mutex",
  processstate = "process-state",
  targetuser = "target-user",
  targetemail = "target-email",
  targetmachine = "target-machine",
  targetorg = "target-org",
  targetlocation = "target-location",
  targetexternal = "target-external",
  btc = "btc",
  dash = "dash",
  xmr = "xmr",
  iban = "iban",
  bic = "bic",
  bankaccountnr = "bank-account-nr",
  abartn = "aba-rtn",
  bin = "bin",
  ccnumber = "cc-number",
  prtn = "prtn",
  phonenumber = "phone-number",
  threatactor = "threat-actor",
  campaignname = "campaign-name",
  campaignid = "campaign-id",
  malwaretype = "malware-type",
  uri = "uri",
  authentihash = "authentihash",
  vhash = "vhash",
  ssdeep = "ssdeep",
  imphash = "imphash",
  telfhash = "telfhash",
  pehash = "pehash",
  impfuzzy = "impfuzzy",
  sha224 = "sha224",
  sha384 = "sha384",
  sha512 = "sha512",
  sha512_224 = "sha512/224",
  sha512_256 = "sha512/256",
  sha3_224 = "sha3-224",
  sha3_256 = "sha3-256",
  sha3_384 = "sha3-384",
  sha3_512 = "sha3-512",
  tlsh = "tlsh",
  cdhash = "cdhash",
  filenameauthentihash = "filename|authentihash",
  filenamevhash = "filename|vhash",
  filenamessdeep = "filename|ssdeep",
  filenameimphash = "filename|imphash",
  filenameimpfuzzy = "filename|impfuzzy",
  filenamepehash = "filename|pehash",
  filenamesha224 = "filename|sha224",
  filenamesha384 = "filename|sha384",
  filenamesha512 = "filename|sha512",
  filenamesha512_224 = "filename|sha512/224",
  filenamesha512_256 = "filename|sha512/256",
  filenamesha3_224 = "filename|sha3-224",
  filenamesha3_256 = "filename|sha3-256",
  filenamesha3_384 = "filename|sha3-384",
  filenamesha3_512 = "filename|sha3-512",
  filenametlsh = "filename|tlsh",
  windowsscheduledtask = "windows-scheduled-task",
  windowsservicename = "windows-service-name",
  windowsservicedisplayname = "windows-service-displayname",
  whoisregistrantemail = "whois-registrant-email",
  whoisregistrantphone = "whois-registrant-phone",
  whoisregistrantname = "whois-registrant-name",
  whoisregistrantorg = "whois-registrant-org",
  whoisregistrar = "whois-registrar",
  whoiscreationdate = "whois-creation-date",
  x509fingerprintsha1 = "x509-fingerprint-sha1",
  x509fingerprintmd5 = "x509-fingerprint-md5",
  x509fingerprintsha256 = "x509-fingerprint-sha256",
  dnssoaemail = "dns-soa-email",
  sizeinbytes = "size-in-bytes",
  counter = "counter",
  datetime = "datetime",
  port = "port",
  ipdstport = "ip-dst|port",
  ipsrcport = "ip-src|port",
  hostnameport = "hostname|port",
  macaddress = "mac-address",
  maceui64 = "mac-eui-64",
  emaildstdisplayname = "email-dst-display-name",
  emailsrcdisplayname = "email-src-display-name",
  emailheader = "email-header",
  emailreplyto = "email-reply-to",
  emailxmailer = "email-x-mailer",
  emailmimeboundary = "email-mime-boundary",
  emailthreadindex = "email-thread-index",
  emailmessageid = "email-message-id",
  githubusername = "github-username",
  githubrepository = "github-repository",
  githuborganisation = "github-organisation",
  jabberid = "jabber-id",
  twitterid = "twitter-id",
  dkim = "dkim-signature",
  firstname = "first-name",
  middlename = "middle-name",
  lastname = "last-name",
  fullname = "full-name",
  dateofbirth = "date-of-birth",
  placeofbirth = "place-of-birth",
  gender = "gender",
  passportnumber = "passport-number",
  passportcountry = "passport-country",
  passportexpiration = "passport-expiration",
  redressnumber = "redress-number",
  nationality = "nationality",
  visanumber = "visa-number",
  issuedateofthevisa = "issue-date-of-the-visa",
  primaryresidence = "primary-residence",
  countryofresidence = "country-of-residence",
  specialservicerequest = "special-service-request",
  frequentflyernumber = "frequent-flyer-number",
  traveldetails = "travel-details",
  paymentdetails = "payment-details",
  placeportoforiginalembarkation = "place-port-of-original-embarkation",
  placeportofclearance = "place-port-of-clearance",
  placeportofonwardforeigndestination = "place-port-of-onward-foreign-destination",
  passengernamerecordlocatornumber = "passenger-name-record-locator-number",
  mobileapplicationid = "mobile-application-id",
  chromeextensionid = "chrome-extension-id",
  cortex = "cortex",
  boolean = "boolean",
  anonymised = "anonymised",
}

export function getAttributeTypeFromIOCType(type: IOCType) {
  return AttributeTypes[
    type.toLowerCase().replaceAll("_", "") as keyof typeof AttributeTypes
  ];
}
